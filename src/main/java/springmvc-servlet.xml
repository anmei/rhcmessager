<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.1.xsd">
	
	<!-- 原始的基于配置的页面控制器，若不配置也会有默认的配置 -->
	<!-- HandlerMapping -->  
	<!-- <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/> -->  
	<!-- bean -->
	<!-- <bean name="/user" class="org.rhc.test.controller.UserController"/> -->   
	 
	<!-- HandlerAdapter -->  
	<!-- <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"/> -->  
	<!-- / -->
	
	
	<!-- 开启controller注解支持 -->
    <!-- 注：如果base-package=org.rhc，且use-default-filters="true" 则注解事务不起作用 TODO 读源码 ，会覆盖掉spring容器中加载的cglib动态代理-->
	<context:component-scan base-package="com.rhc" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<!-- <context:include-filter type="regex" expression="\.\.controller\.*"/> -->
	</context:component-scan>
	<mvc:annotation-driven />
	
	<!-- 静态资源解析支持   DispatcherServlet使用     <url-pattern>/</url-pattern> 映射时，能映射静态资源-->
	<mvc:default-servlet-handler />
	<!-- 静态资源映射 -->  
	<!-- <mvc:resources mapping="/images/**" location="/WEB-INF/images/" />  
	<mvc:resources mapping="/css/**" location="/WEB-INF/css/" />  
	<mvc:resources mapping="/js/**" location="/WEB-INF/js/" />   -->
	
	<!-- 默认访问 -->
	<!-- <mvc:view-controller path="/" view-name="forward:/index"/> -->
	
	
	<!-- ========================= VIEW定义 ========================= -->
    <!-- bean name view resolver-->
    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="0"/>  
    
    <!-- 根据客户端的不同的请求决定不同的 view进行响应, 如 /blog/1.json /blog/1.xml。真正的restful风格应该是根据请求头的accept-type决定返回内容的，但是编写代码比较麻烦，这里选择折中的做法-->  
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver" p:order="1">  
        <!-- 设置为true以忽略对Accept Header的支持-->  
        <property name="ignoreAcceptHeader" value="true"></property>
        <!-- 扩展名至mimeType的映射,即 /user.json => application/json -->  
        <property name="favorPathExtension" value="true"/>  
        <!-- 用于开启 /userinfo/123?format=json 的支持 -->  
        <property name="favorParameter" value="true"/>  
        <property name="mediaTypes">  <!--favorPathExtension, favorParameter是true时才起作用  -->
            <map>  
<!--            <entry key="wml" value="text/vnd.wap.wml"/>-->
<!--            <entry key="vnd" value="application/vnd.wap.xhtml+xml"/>-->
<!--            <entry key="xhtml" value="application/xhtml+xml"/>-->
                <entry key="json" value="application/json" />
				<entry key="html" value="text/html" /> <!-- 真正静态页面，使用htm后缀(文件格式)-->
            </map>  
         </property>  
         <property name="viewResolvers">  
             <list>  
                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
                    <property name="contentType" value="text/html"/>
                    <property name="prefix" value="/WEB-INF/jsp/"/>
                    <property name="suffix" value=".jsp"/>
                </bean>
            </list>  
        </property>  
        <!-- 可配置Not Found url
        <property name="defaultViews">
            <list>  
                 <bean class="org.springframework.web.servlet.view.JstlView" p:url="/notfound"/>  
            </list>  
        </property>  --> 
    </bean>  

    <!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
    <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:order="3">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="contentType" value="text/html"/>        
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- json view -->
    <bean id="defaultJsonView" class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"/>
    
   
    <!-- 控制器异常处理 -->
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
              <props>
                  <prop key="java.lang.Exception">
                        error_all
                </prop>
            </props>
        </property>
    </bean>
    
    <!-- 文件上传相关 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--one of the properties available;the maximum file size in bytes-->
        <property name="maxUploadSize" value="100000"/>
    </bean>
     
	
	<!-- ============================================================================================ -->
	
	
	
</beans>