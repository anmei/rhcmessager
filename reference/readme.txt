#/usr/bin/which: no unzip in (/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin)
考虑session集成存储，现在比较好的方案就是nosql存储，修改tomcat、jetty和jboss等session的存储方式是很容易的
根结构下的任何目录都可以作为挂载点，而您也可以将同一文件系统同时挂载于不同的挂载点上,但是不能在同一个挂载点上挂载多个不同的分区》》》
-------others----------
jndi
服务器：resin\weblogic\jety、glassfish
亲和式集群
逆向ajax技术(comet\server site push)
directory memory：无法主动需要gc、只能full gc后再顺便为其收集垃圾，NIO频繁的操作需要慎重该内存区域
32位系统,linux中每个线程只能使用4G(2^32)内存；windows中最多只能使用2G
RPC、RMI



-------english----------
inconceivable\prohibits\stipulations\for convenience
From a performance standpoint
ineligible\More generally
violates\perspective\Virtually
Caution should be exercised
comform to
on a best-effort basis
vice-versa
in preference to
metadata\schema




---------java基础--------------



-------------------
单一、隔离、开闭、里氏替换、依赖倒置、迪米特 原则





------concurrent-------------


-----JVM--------------
java技术体系：java语言、javac等工具、类库、JVM
同一个类被不同的类加载器加载，也会被视为不同的类
jdk7开始“去持久代”，方法区常连池不再保存String的缓存常量，而是只保存一个堆区的引用
新生代——年老代(数组、长字符串等大对象直接进入年老代)——持久代(常量池一般是持久代)

(线程共享)类级别内存区域：堆区(存储对象等)、方法区(存储类信息，包括全局常量、静态变量、类信息等)
(线程隔离)方法级别的内存区域：程序计数器(标记当前线程执行到的指令)、jvm栈(存储方法中局部变量、返回类型等)、本地方法栈(类似于jvm栈，存储native方法相关信息)

判断一个对象是否可以被回收：计数法；参见java.lang.ref的各种引用
回收步骤：判断对象是否重写了finalize()方法或者是否被jvm调用过finalize()方法，若没有重写 或者 已经被调用过了，则直接回收；否则，放入F-Queue队列等待执行finalize()方法。一旦执行完finalize(),该对象基本就要死亡了
垃圾收集算法：标记-清楚、标记-复制、标记-整理
jvm主要：分配内存给对象；回收分配给对象的内存。且提供了不同的收集器与大量的调节参数以供调优性能



------密码学-------------
* 编码字符集
* UTF-8\GBK\GB2312
* 散列算法
* MD5、SHA-0\1\2(secure Hash Algorithm)
* 加密工具类
* RSA\DES\AES\BASE64
* 
* 目前 MD5 已在 2005 年被中国数学家王小云发现有抗强冲突性的漏洞，给定一个散列值，
* 可以在几分钟内用普通计算机找到一个碰撞，即具有相同散列值的信息原文。
* 
* SHA-0 被发现漏洞可以将寻找碰撞的难度从 2^80 次暴力破解降低到 2^39 次，
* SHA-1 被发现漏洞可以将寻找碰撞的难度从 2^80 次降低到 2^63 次，
* SHA-2 系列函数还未发现漏洞。
* 
* 抗强冲突性，即给定一个散列值，无法找到另一个具有同样散列值的信息原文。
* 抗弱冲突性，即无法找到两个具有同样散列值的信息原文。

SSL/TSL
https:是一套安全措施，URL表明它使用了HTTPS，但HTTPS存在不同于HTTP的默认端口(443端口)及一个加密/身份验证层（在HTTP与TCP之间），这个系统的最初研发由网景公司进行
通过安装X.509数字证书(单向验证/双向验证)实现HTTPS协议传输，从而实现加密同时被认证
客户端是否能够信任这个站点的证书，首先取决于客户端程序是否导入了证书颁发者的根证书。
自己签名的证书只是用户产生的证书，没有正式在大家所熟知的认证权威那里注册过，因此不能确保它的真实性。但却能保证数据传输的安全性。
Keytool将密钥（key）和证书（certificates）存在一个称为keystore的文件中 
 一个证书是一个实体的数字签名,还包含这个实体的公钥.


-------lucene------------
由于数据库索引不是为全文索引设计的，因此，使用like "%keyword%"时，数据库索引是不起作用的，在使用like查询时，搜索过程又变成类似于一页页翻书的遍历过程了，
Lucene是一个高性能的java全文检索工具包，它使用的是倒排文件索引结构
我们注意到关键字是按字符顺序排列的（lucene没有使用B树结构），因此lucene可以用二元搜索算法快速定位关键词
对于检索系统来说核心是一个排序问题。
大部分的搜索（数据库）引擎都是用B树结构来维护索引，索引的更新会导致大量的IO操作，Lucene在实现中，对此稍微有所改进：不是维护一个索引文件，而是在扩展索引的时候不断创建新的索引文件，然后定期的把这些新的小索引文件合并到原先的大索引中
另外一个解决的办法是采用自动切分算法：将单词按照2元语法(bigram)方式切分出来，比如：
　　　　"北京天安门" ==> "北京 京天 天安 安门"。
这样，在查询的时候，无论是查询"北京" 还是查询"天安门"，将查询词组按同样的规则进行切分："北京"，"天安安门"，多个关键词之间按与"and"的关系组合，同样能够正确地映射到相应的索引中。
目前比较大的搜索引擎的语言分析算法一般是基于以上2个机制的结合(自动切分、词表切分)。
Lucene中的一些比较复杂的词法分析是用JavaCC生成的（JavaCC：JavaCompilerCompiler，纯Java的词法分析生成器）
分词：paoding、IKAnalyzer


------------------------









